<?php


	/* Monitors
		Disk Space
			Partitions
		
		Memory
		
		Process is running
		
		Load Average
	
	  ONE TIME ACTIONS
	  ================
	  
	  Virus Scans
	  DB optimize
	  database backups
	  	
	
	*/	
include_once("n5mon-config.php");		

array_shift($argv);
$action = $argv[0];
$id = $argv[1];
	echo "\n";		
	echo "\n";			
	echo "N5 Networks System Monitor\n";		
	echo "Version 3.8.1\n";		
	echo "Low overhead all purpose system monitor and maintenance tool\n";		
	echo "\n";		
	echo "(c)2016 Brian Shaffer / N5 Networks\n";		
	echo "brian\@n5net.com\n";		
	echo "\n";		

if (!$action) 
{

	echo "Command line options:\n";		
	echo "	php ./n5mon.php monitor - Runs all monitors\n";		
	echo "	php ./n5mon.php backup - Runs all backups\n";			
	echo "	php ./n5mon.php dbbackup - Backup and archive all databases\n";			
	echo "	php ./n5mon.php vscan - Perform Virus Scan\n";			
	echo "\n";		
	echo "All options are stored in n5mon-config.php\n";		
	echo "\n";			
	echo "\n";			
	exit;
}
		
	
if($action == "monitor")
{	
		
	// DISK MONITOR
	$bytes = disk_free_space("/");
	$si_prefix = array( 'B', 'KB', 'MB', 'GB', 'TB', 'EB', 'ZB', 'YB' );
    $base = 1024;
    $class = min((int)log($bytes , $base) , count($si_prefix) - 1);
    //echo $bytes . " bytes available = ";
    //echo sprintf('%1.2f' , $bytes / pow($base,$class)) . ' ' . $si_prefix[$class];
	//echo "\n";
    $gb_free = sprintf('%1.2f' , $bytes / pow($base,$class));
	//echo $gb_free . " FREE\n\n";
	echo "--Checking Disk Space...\n";
	if($GLOBALS['disk_limit']>$gb_free) {
		echo "---FAILED! Disk space check ...\n";
		$server = $GLOBALS['server'];
		$subject = '[SERVER MONITOR] ' . $server . ' IS LOW ON DISK SPACE!';
		$body = $server . ' IS LOW ON DISK SPACE! There is currently ' . $gb_free . ' GB free space.';
		send_alert($subject,$body);
	} else {
		echo "---PASSED! Disk space check, " . $gb_free . " GB available.\n";
		
	}

	
	// Process
	//echo "--Checking Disk Space...\n";	
	foreach($processes as $x => $x_value) {
		echo "--Checking Process: " . $x . "\n";	
		//echo "Key=" . $x . ", Value=" . $x_value;
		
		if (($x_value == "apache2") || ($x_value == "httpd")) {
			exec("pgrep -f ". $x_value, $pids);
		} else {
			exec("pgrep ". $x_value, $pids);
		}
		
		
		//print_r($pids);
		if(empty($pids)) {
			echo "---FAILED! service " . $x . " (" . $x_value . ") is NOT running\n";
			$server = $GLOBALS['server'];
			$subject = '[SERVER MONITOR] ' . $server . ' - ' . $x_value . ' IS DOWN!';
			$body = $server . ' Is reporting that service ' . $x . ' running ' . $x_value . ' IS NOT RUNNING!';
			send_alert($subject,$body);
		} else {
			echo "---PASSED! service " . $x . " (" . $x_value . ") is running\n";
		}
		unset($pids);
	}
	

	
	// LOAD Averages
	$load = sys_getloadavg();
	echo "\n\n";
	echo "Loads: ";
	print_r($load);
	
	
}	
	
	
	

/*

	DB BACKUPS

*/	
//dodumps("localhost","root","br400doh");
//zipdump("databases");



function zipdump ($servername) {

        $today = date("Y-m-d");
        $outname = $servername . "_" . $today . ".tar.gz";
        system("tar -cvzf " . $outname . " *.sql");
        system("rm *.sql");
        //sendToCloud('mysql-backups', $outname);
}

function dodumps($db_host, $db_user, $db_pass) {

        $con = mysql_connect($db_host,$db_user,$db_pass);
        if (!$con) { die('Could not connect: ' . mysql_error()); }
	echo 'connected to database';
	echo "\n";
	echo 'Getting Database List';

        $result = mysql_query("show databases;")
        or die(mysql_error());

        print_r($result);

        while($row = mysql_fetch_array( $result ))
        {
                print 'Dumping ' . $row['Database'];
                print '
                ';
                $db = $row['Database'];
                $today = date("Y-m-d");
                $outname = $db . "_" . $today . ".sql";
                system("mysqldump -P3308 -h" . $db_host ." -u" . $db_user . " -p" . $db_pass . " " . $db . " > " . $outname);

        }

}


/* make backup dir if it doesn't exist
    $dirname = "files/" . $id . "/";
    $filename = $dirname;
    if (!file_exists($filename)) {
        mkdir($dirname, 0777);
    }	
*/

/* Rotate Old BACKUPS
	Example:
		$xfile =  get_oldest_file("/home/sites/1186/www/snapshot/"); 
		echo "Oldest Is: ";
		echo $xfile;
		echo "\n";
		system("rm /home/sites/1186/www/snapshot/" . $xfile);
*/

function get_oldest_file($directory) { 
    if ($handle = opendir($directory)) { 
        while (false !== ($file = readdir($handle))) { 
            $files[] = $file; 
        } 
        foreach ($files as $val) { 

	    //	echo $val . "\n";
            if (is_file($directory.$val)) {
	
		$rest = substr($val, 0,5);
		echo $rest;
		echo "\n";
		if ($rest == "trep-") {									////////////////////////////////  DATABASE PREFIX!!!!!!!!!! FIXME
		echo $val;
		echo "\n"; 
                $file_date[$val] = filemtime($directory.$val);
		} 
            } 

        } 
    } 
    
    closedir($handle);
    //print_r($files); 
    asort($file_date, SORT_NUMERIC); 
    reset($file_date); 
    $oldest = key($file_date); 
    return $oldest; 
} 

/// VIRUS Scans
function virus_scan()
{
       $today = date("Y-m-d");


        // Update Virus Definitions
        $cmdline = "freshclam";
        echo $cmdline;
        echo "\n";
        system($cmdline);
        // Run The Scan
        $cmdline = "clamscan -r -i /home/ > /var/log/" . $today . "_virusscan.log";
        echo $cmdline;
        echo "\n";
        system($cmdline);

        $file = file_get_contents("/var/log/" . $today . "_virusscan.log");
        echo $file;
        echo "\n";
        echo "\n";

        if (strpos($file,'FOUND') == true)
        {
                // Virus Found!
                $subject = "ACTION REQUIRED: A virus has been found on the server";


                $body = "A virus has been found on the server.\n\n";
                $body .= $file;
                $body .= "\n\nPlease take immediate action and remove these potential threats.";

                // Send The Email
               // mail("zak@zakloveday.com",$subject,$body);
			   send_alert($subject,$body);


        } else {


                $subject = "Virus Scan Completed - No Viruses Found";
                $body = "Virus Scan Completed - No Viruses Found";
                //mail("zak@zakloveday.com",$subject,$body);

        }
}	
	
function send_alert($subject, $body)
{
            echo "- Sending Alert to " . $GLOBALS['alert_email'] . " - " . $subject . "\n"; 
			mail($GLOBALS['alert_email'],$subject,$body);	
}	
?>